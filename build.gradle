buildscript {
    repositories {
        maven { url = 'https://maven.parchmentmc.org' } // Parchment
        maven { url = 'https://maven.minecraftforge.net/' }
        mavenCentral()
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath(group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true) { exclude group: 'org.apache.logging.log4j' }
        classpath 'org.apache.logging.log4j:log4j-api:2.11.2'
        classpath 'org.apache.logging.log4j:log4j-core:2.11.2'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'org.parchmentmc:librarian:1.+' // Parchment
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle' // Parchment
apply plugin: 'eclipse'
apply plugin: 'org.spongepowered.mixin'

version = mod_version
group = 'net.tslat.aoawikihelpermod'
archivesBaseName = 'aoawikihelpermod'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

sourceSets {
    main.resources.srcDir 'src/generated/resources'
}

minecraft {
    mappings channel: mappings_channel, version: mappings_version
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            taskName 'Client'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                aoawikihelpermod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            taskName 'Server'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                aoawikihelpermod {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven { // Cursemaven for Curseforge hosted dependencies. Skip official CF maven for legibility reasons
        name = "CurseMaven"
        url = "https://www.cursemaven.com"

        content {
            includeGroup "curse.maven"
        }
    }

    maven {
        name = "Geckolib" // Geckolib
        url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/"
    }

    flatDir {
        dirs 'libs'
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:$project.minecraft_version-$project.forge_version"

    implementation fg.deobf("curse.maven:advent-of-ascension-nevermine-311054:$project.aoa_version")
    implementation fg.deobf("software.bernie.geckolib:geckolib-$project.geckolib_version")

    // Mixin annotation processor, just in case we need it
    if (System.getProperty("idea.sync.active") != "true") {
        annotationProcessor 'org.spongepowered:mixin:0.8.3:processor'
    }
}

mixin {
    add sourceSets.main, "${modid}.refmap.json"
}

jar {
    manifest {
        attributes([
            "Specification-Title": "aoawikihelpermod",
            "Specification-Vendor": "Tslat",
            "Specification-Version": "1.18.2",
            "Implementation-Title": project.name,
            "Implementation-Version": "${mod_version}",
            "Implementation-Vendor" :"Tslat",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "${modid}.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')